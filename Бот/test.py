import emoji
import uuid
import datetime

my_id = uuid.uuid1() # or uuid.uuid4()
id = []
# print(my_id)
# print(emoji.demojize('üò¨'))
time = str(datetime.datetime.now())[11:]
time = time.split(':')
# print(time)

GOOD = [':grinning_face:', ':grinning_face_with_big_eyes:', ':grinning_face_with_smiling_eyes:', ':beaming_face_with_smiling_eyes:']
BAD = [':unamused_face:', ':disappointed_face:']
ANGRY = [':angry_face_with_horns:', ':grimacing_face:']

a = 1
while a == 1:
    message = input()
    message_dem = emoji.demojize(message)
    time = str(datetime.datetime.now())[11:]
    time = time.split(':')
    # print(time)
    if message_dem in GOOD:
        print('–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ö–æ—Ä–æ—à–æ, –∫–æ–≥–¥–∞ —É —á–µ–ª–æ–≤–µ–∫–∞ —Ö–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ!')
        try:
            second_query = input()
            second_query = emoji.demojize(second_query)
            time_2 = str(datetime.datetime.now())[11:]
            time_2 = time_2.split(':')
            for i in range(len(time)):
                # print(time_2, int(time_2[1]), int(time[1]))
                if int(time_2[1]) - int(time[1]) <= 1:
                    if second_query in GOOD:
                        print('–•–æ—Ä–æ—à–æ, –∫–æ–≥–¥–∞ –Ω–∞—Å—Ç—Ä–µ–æ–Ω–∏–µ –≤—Å–µ–≥–¥–∞ –Ω–∞ –≤—ã—Å–æ—Ç–µ!')
                    elif second_query in BAD:
                        print('–ü–µ—Ä–µ–º–µ–Ω—á–∏–≤–æ–µ —É –í–∞—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ')
                    else:
                        print('–î—É–º–∞—é, –í–∞–º —Å—Ç–æ–∏—Ç –ø–æ–º–µ–¥–∏—Ç–∏—Ä–æ–≤–∞—Ç—å, –≤—Å—è –∑–ª–æ—Å—Ç—å –∏—Å–ø–∞—Ä–∏—Ç—Å—è')
        except second_query is None:
            print('–ö–æ–Ω–µ—Ü')

    elif message_dem in BAD:
        print('–ü—Ä–∏–≤–µ—Ç! –í–∏–¥–∏–º–æ, —É –í–∞—Å —á—Ç–æ-—Ç–æ —Å—Ç—Ä—è—Å–ª–æ—Å—å. –ù–µ –≥—Ä—É—Å—Ç–∏—Ç–µ')
    elif message_dem in ANGRY:
        print('–ù—É –ø—Ä–∏–≤–µ—Ç, —á–µ–ª–æ–≤–µ–∫ –Ω–µ –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏')
    else:
        a = 0
        print('–°–æ–≤—Å–µ–º —è —Ä–∞–∑—É—á–∏–ª—Å—è –ø–æ–Ω–∏–º–∞—Ç—å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —è–∑—ã–∫...')

       
        
        


